/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Market, MarketInterface } from "../../contracts/Market";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingAmount",
        type: "uint256",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingAmount",
        type: "uint256",
      },
    ],
    name: "MarketItemStatusChange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "cancelMarketItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "createMarketSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "fetchMarketItem",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "fetchMarketItemByTokenId",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItemsCreated",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "fetchMarketItemsForToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingPrice",
        type: "uint256",
      },
    ],
    name: "updateListingPrice",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200331d3803806200331d8339818101604052810190620000379190620000a5565b600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060048190555050620000f5565b6000815190506200009f81620000db565b92915050565b600060208284031215620000b857600080fd5b6000620000c8848285016200008e565b91505092915050565b6000819050919050565b620000e681620000d1565b8114620000f257600080fd5b50565b61321880620001056000396000f3fe6080604052600436106100dd5760003560e01c806399540b511161007f578063bc197c8111610059578063bc197c8114610297578063dd3385b7146102d4578063ec951a96146102ff578063f23a6e611461033c576100dd565b806399540b511461022257806399dd7e201461023e578063ae677aa31461027b576100dd565b80632a45b250116100bb5780632a45b250146101755780634224d18f146101b25780636aefd991146101ce5780636f6b9a72146101f7576100dd565b806301ffc9a7146100e25780630f08efe01461011f57806312e855851461014a575b600080fd5b3480156100ee57600080fd5b50610109600480360381019061010491906124ce565b610379565b6040516101169190612a52565b60405180910390f35b34801561012b57600080fd5b506101346103e8565b6040516101419190612a30565b60405180910390f35b34801561015657600080fd5b5061015f610652565b60405161016c9190612bcf565b60405180910390f35b34801561018157600080fd5b5061019c600480360381019061019791906124f7565b61065c565b6040516101a99190612bb4565b60405180910390f35b6101cc60048036038101906101c79190612416565b6107b3565b005b3480156101da57600080fd5b506101f560048036038101906101f09190612520565b610c06565b005b34801561020357600080fd5b5061020c610ec2565b6040516102199190612a30565b60405180910390f35b61023c60048036038101906102379190612520565b61124b565b005b34801561024a57600080fd5b50610265600480360381019061026091906124f7565b61162d565b6040516102729190612bb4565b60405180910390f35b610295600480360381019061029091906124f7565b61186e565b005b3480156102a357600080fd5b506102be60048036038101906102b991906122b8565b611908565b6040516102cb9190612a6d565b60405180910390f35b3480156102e057600080fd5b506102e9611939565b6040516102f69190612a30565b60405180910390f35b34801561030b57600080fd5b50610326600480360381019061032191906124f7565b611cd8565b6040516103339190612a30565b60405180910390f35b34801561034857600080fd5b50610363600480360381019061035e9190612384565b611fcb565b6040516103709190612a6d565b60405180910390f35b6000807fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614905080915050919050565b606060006103f66001611ffa565b90506000808267ffffffffffffffff81111561043b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561047457816020015b6104616120e9565b8152602001906001900390816104595790505b50905060005b838110156106485760006001826104919190612d04565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050848681518110610619577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052506001856106319190612d04565b94505050808061064090612f17565b91505061047a565b5080935050505090565b6000600454905090565b6106646120e9565b600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815250509050919050565b600260005414156107f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f090612b74565b60405180910390fd5b60026000819055506108426040518060400160405280601581526020017f4372656174696e67204d61726b6574204974656d3a0000000000000000000000815250868686612008565b60008573ffffffffffffffffffffffffffffffffffffffff166301ffc9a77fd9b67a26000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040161089d9190612a6d565b60206040518083038186803b1580156108b557600080fd5b505afa1580156108c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ed91906124a5565b9050600115158115151461090057600080fd5b60008411610943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093a90612b94565b60405180910390fd5b6004543414610987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097e90612b34565b60405180910390fd5b61099160016120aa565b600061099d6001611ffa565b90506040518060e001604052808281526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815250600560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c082015181600601559050508673ffffffffffffffffffffffffffffffffffffffff1663eb46c45b3333308a89896040518763ffffffff1660e01b8152600401610b6b969594939291906129c8565b600060405180830381600087803b158015610b8557600080fd5b505af1158015610b99573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff16817fc3ff4a764c9b9e1277108ea23607246687fc68d2d8d7ad5ef37a8702d4443759883360008a8a604051610bed959493929190612bea565b60405180910390a3505060016000819055505050505050565b60006005600085815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610caf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca690612ad4565b60405180910390fd5b8260056000868152602001908152602001600020600601541015610d08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cff90612af4565b60405180910390fd5b60006005600086815260200190815260200160002060020154905060006005600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663eb46c45b6005600089815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630600560008b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868a8a6040518763ffffffff1660e01b8152600401610e0d969594939291906128f8565b600060405180830381600087803b158015610e2757600080fd5b505af1158015610e3b573d6000803e3d6000fd5b5050505084600560008881526020019081526020016000206006016000828254610e659190612db4565b92505081905550857fb2f34009f071c98d3d38bfcdfb3ef51685af4db79379cf422549881c14e21ae86005600089815260200190815260200160002060060154604051610eb29190612bcf565b60405180910390a2505050505050565b60606000610ed06001611ffa565b905060008060005b83811015610f79573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610f089190612d04565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f6657600183610f639190612d04565b92505b8080610f7190612f17565b915050610ed8565b5060008267ffffffffffffffff811115610fbc577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610ff557816020015b610fe26120e9565b815260200190600190039081610fda5790505b50905060005b84811015611240573373ffffffffffffffffffffffffffffffffffffffff166005600060018461102b9190612d04565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561122d5760006001826110889190612d04565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050848681518110611210577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052506001856112289190612d04565b945050505b808061123890612f17565b915050610ffb565b508094505050505090565b60026000541415611291576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128890612b74565b60405180910390fd5b600260008190555060008260056000868152602001908152602001600020600501546112bd9190612d5a565b90506000600560008681526020019081526020016000206002015490508360056000878152602001908152602001600020600601541015611333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132a90612af4565b60405180910390fd5b813414611375576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136c90612b14565b60405180910390fd5b6005600086815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156113f1573d6000803e3d6000fd5b5060006005600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663eb46c45b6005600089815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163033868a8a6040518763ffffffff1660e01b81526004016114a696959493929190612960565b600060405180830381600087803b1580156114c057600080fd5b505af11580156114d4573d6000803e3d6000fd5b50505050336005600088815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846005600088815260200190815260200160002060060160008282546115539190612db4565b9250508190555061156460026120aa565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f193505050501580156115ce573d6000803e3d6000fd5b50857fb2f34009f071c98d3d38bfcdfb3ef51685af4db79379cf422549881c14e21ae860056000898152602001908152602001600020600601546040516116159190612bcf565b60405180910390a25050506001600081905550505050565b6116356120e9565b60006116416001611ffa565b905060008060005b8381101561169e5785600560006001846116639190612d04565b815260200190815260200160002060020154141561168b576001836116889190612d04565b92505b808061169690612f17565b915050611649565b506116a76120e9565b60005b848110156118615786600560006001846116c49190612d04565b815260200190815260200160002060020154141561184e5760006001826116eb9190612d04565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820154815260200160068201548152505093506001856118499190612d04565b945050505b808061185990612f17565b9150506116aa565b5080945050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146118fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f590612b54565b60405180910390fd5b8060048190555050565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97905098975050505050505050565b606060006119476001611ffa565b905060008060005b828110156119f0573373ffffffffffffffffffffffffffffffffffffffff166005600060018461197f9190612d04565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156119dd576001836119da9190612d04565b92505b80806119e890612f17565b91505061194f565b5060008267ffffffffffffffff811115611a33577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015611a6c57816020015b611a596120e9565b815260200190600190039081611a515790505b50905060005b84811015611ccd573373ffffffffffffffffffffffffffffffffffffffff1660056000600184611aa29190612d04565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611cba57600060056000600184611b039190612d04565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050848681518110611c9d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185611cb59190612d04565b945050505b8080611cc590612f17565b915050611a72565b508094505050505090565b60606000611ce66001611ffa565b905060008060005b83811015611d43578560056000600184611d089190612d04565b8152602001908152602001600020600201541415611d3057600183611d2d9190612d04565b92505b8080611d3b90612f17565b915050611cee565b5060008267ffffffffffffffff811115611d86577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015611dbf57816020015b611dac6120e9565b815260200190600190039081611da45790505b50905060005b84811015611fbe578660056000600184611ddf9190612d04565b8152602001908152602001600020600201541415611fab576000600182611e069190612d04565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050848681518110611f8e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185611fa69190612d04565b945050505b8080611fb690612f17565b915050611dc5565b5080945050505050919050565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf9790509695505050505050565b600081600001549050919050565b6120a4848484846040516024016120229493929190612a88565b6040516020818303038152906040527fdaa394bd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120c0565b50505050565b6001816000016000828254019250508190555050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b600061217b61217684612c62565b612c3d565b90508281526020810184848401111561219357600080fd5b61219e848285612ea4565b509392505050565b6000813590506121b581613186565b92915050565b60008083601f8401126121cd57600080fd5b8235905067ffffffffffffffff8111156121e657600080fd5b6020830191508360208202830111156121fe57600080fd5b9250929050565b6000815190506122148161319d565b92915050565b600081359050612229816131b4565b92915050565b60008083601f84011261224157600080fd5b8235905067ffffffffffffffff81111561225a57600080fd5b60208301915083600182028301111561227257600080fd5b9250929050565b600082601f83011261228a57600080fd5b813561229a848260208601612168565b91505092915050565b6000813590506122b2816131cb565b92915050565b60008060008060008060008060a0898b0312156122d457600080fd5b60006122e28b828c016121a6565b98505060206122f38b828c016121a6565b975050604089013567ffffffffffffffff81111561231057600080fd5b61231c8b828c016121bb565b9650965050606089013567ffffffffffffffff81111561233b57600080fd5b6123478b828c016121bb565b9450945050608089013567ffffffffffffffff81111561236657600080fd5b6123728b828c0161222f565b92509250509295985092959890939650565b60008060008060008060a0878903121561239d57600080fd5b60006123ab89828a016121a6565b96505060206123bc89828a016121a6565b95505060406123cd89828a016122a3565b94505060606123de89828a016122a3565b935050608087013567ffffffffffffffff8111156123fb57600080fd5b61240789828a0161222f565b92509250509295509295509295565b600080600080600060a0868803121561242e57600080fd5b600061243c888289016121a6565b955050602061244d888289016122a3565b945050604061245e888289016122a3565b935050606061246f888289016122a3565b925050608086013567ffffffffffffffff81111561248c57600080fd5b61249888828901612279565b9150509295509295909350565b6000602082840312156124b757600080fd5b60006124c584828501612205565b91505092915050565b6000602082840312156124e057600080fd5b60006124ee8482850161221a565b91505092915050565b60006020828403121561250957600080fd5b6000612517848285016122a3565b91505092915050565b60008060006060848603121561253557600080fd5b6000612543868287016122a3565b9350506020612554868287016122a3565b925050604084013567ffffffffffffffff81111561257157600080fd5b61257d86828701612279565b9150509250925092565b600061259383836127be565b60e08301905092915050565b6125a881612e6e565b82525050565b6125b781612dfa565b82525050565b6125c681612de8565b82525050565b6125d581612de8565b82525050565b60006125e682612ca3565b6125f08185612cd1565b93506125fb83612c93565b8060005b8381101561262c5781516126138882612587565b975061261e83612cc4565b9250506001810190506125ff565b5085935050505092915050565b61264281612e0c565b82525050565b61265181612e18565b82525050565b600061266282612cae565b61266c8185612ce2565b935061267c818560208601612eb3565b61268581612fbe565b840191505092915050565b600061269b82612cb9565b6126a58185612cf3565b93506126b5818560208601612eb3565b6126be81612fbe565b840191505092915050565b60006126d6602d83612cf3565b91506126e182612fcf565b604082019050919050565b60006126f9601a83612cf3565b91506127048261301e565b602082019050919050565b600061271c604083612cf3565b915061272782613047565b604082019050919050565b600061273f602483612cf3565b915061274a82613096565b604082019050919050565b6000612762602b83612cf3565b915061276d826130e5565b604082019050919050565b6000612785601f83612cf3565b915061279082613134565b602082019050919050565b60006127a8601c83612cf3565b91506127b38261315d565b602082019050919050565b60e0820160008201516127d460008501826128da565b5060208201516127e760208501826125bd565b5060408201516127fa60408501826128da565b50606082015161280d60608501826125ae565b50608082015161282060808501826125ae565b5060a082015161283360a08501826128da565b5060c082015161284660c08501826128da565b50505050565b60e08201600082015161286260008501826128da565b50602082015161287560208501826125bd565b50604082015161288860408501826128da565b50606082015161289b60608501826125ae565b5060808201516128ae60808501826125ae565b5060a08201516128c160a08501826128da565b5060c08201516128d460c08501826128da565b50505050565b6128e381612e64565b82525050565b6128f281612e64565b82525050565b600060c08201905061290d600083018961259f565b61291a60208301886125cc565b612927604083018761259f565b61293460608301866128e9565b61294160808301856128e9565b81810360a08301526129538184612657565b9050979650505050505050565b600060c082019050612975600083018961259f565b61298260208301886125cc565b61298f60408301876125cc565b61299c60608301866128e9565b6129a960808301856128e9565b81810360a08301526129bb8184612657565b9050979650505050505050565b600060c0820190506129dd60008301896125cc565b6129ea60208301886125cc565b6129f760408301876125cc565b612a0460608301866128e9565b612a1160808301856128e9565b81810360a0830152612a238184612657565b9050979650505050505050565b60006020820190508181036000830152612a4a81846125db565b905092915050565b6000602082019050612a676000830184612639565b92915050565b6000602082019050612a826000830184612648565b92915050565b60006080820190508181036000830152612aa28187612690565b9050612ab160208301866125cc565b612abe60408301856128e9565b612acb60608301846128e9565b95945050505050565b60006020820190508181036000830152612aed816126c9565b9050919050565b60006020820190508181036000830152612b0d816126ec565b9050919050565b60006020820190508181036000830152612b2d8161270f565b9050919050565b60006020820190508181036000830152612b4d81612732565b9050919050565b60006020820190508181036000830152612b6d81612755565b9050919050565b60006020820190508181036000830152612b8d81612778565b9050919050565b60006020820190508181036000830152612bad8161279b565b9050919050565b600060e082019050612bc9600083018461284c565b92915050565b6000602082019050612be460008301846128e9565b92915050565b600060a082019050612bff60008301886128e9565b612c0c60208301876125cc565b612c1960408301866125cc565b612c2660608301856128e9565b612c3360808301846128e9565b9695505050505050565b6000612c47612c58565b9050612c538282612ee6565b919050565b6000604051905090565b600067ffffffffffffffff821115612c7d57612c7c612f8f565b5b612c8682612fbe565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612d0f82612e64565b9150612d1a83612e64565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612d4f57612d4e612f60565b5b828201905092915050565b6000612d6582612e64565b9150612d7083612e64565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612da957612da8612f60565b5b828202905092915050565b6000612dbf82612e64565b9150612dca83612e64565b925082821015612ddd57612ddc612f60565b5b828203905092915050565b6000612df382612e44565b9050919050565b6000612e0582612e44565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612e7982612e80565b9050919050565b6000612e8b82612e92565b9050919050565b6000612e9d82612e44565b9050919050565b82818337600083830152505050565b60005b83811015612ed1578082015181840152602081019050612eb6565b83811115612ee0576000848401525b50505050565b612eef82612fbe565b810181811067ffffffffffffffff82111715612f0e57612f0d612f8f565b5b80604052505050565b6000612f2282612e64565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612f5557612f54612f60565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f6e6c79206974656d2073656c6c65722063616e2063616e63656c2061206d6160008201527f726b6574206c697374696e672e00000000000000000000000000000000000000602082015250565b7f54686973206974656d206973206e6f7420617661696c61626c65000000000000600082015250565b7f506c65617365207375626d6974207468652061736b696e67207072696365206960008201527f6e206f7264657220746f20636f6d706c65746520746865207075726368617365602082015250565b7f5072696365206d75737420626520657175616c20746f206c697374696e67207060008201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206d61726b6574206f776e65722063616e20757064617465206c697360008201527f74696e672070726963652e000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f5072696365206d757374206265206174206c6561737420312077656900000000600082015250565b61318f81612de8565b811461319a57600080fd5b50565b6131a681612e0c565b81146131b157600080fd5b50565b6131bd81612e18565b81146131c857600080fd5b50565b6131d481612e64565b81146131df57600080fd5b5056fea2646970667358221220ca811e3831dce006b9a2df4ab52171a93c3f9685b57b921dfcac23113f2d2e5564736f6c63430008040033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _listingPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Market> {
    return super.deploy(_listingPrice, overrides || {}) as Promise<Market>;
  }
  override getDeployTransaction(
    _listingPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_listingPrice, overrides || {});
  }
  override attach(address: string): Market {
    return super.attach(address) as Market;
  }
  override connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new utils.Interface(_abi) as MarketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}
