/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Market, MarketInterface } from "../../contracts/Market";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingAmount",
        type: "uint256",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingAmount",
        type: "uint256",
      },
    ],
    name: "MarketItemStatusChange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "cancelMarketItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "createMarketSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "fetchMarketItem",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "fetchMarketItemByTokenId",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItemsCreated",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "fetchMarketItemsForToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingPrice",
        type: "uint256",
      },
    ],
    name: "updateListingPrice",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620031c2380380620031c28339818101604052810190620000379190620000a5565b600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060048190555050620000f5565b6000815190506200009f81620000db565b92915050565b600060208284031215620000b857600080fd5b6000620000c8848285016200008e565b91505092915050565b6000819050919050565b620000e681620000d1565b8114620000f257600080fd5b50565b6130bd80620001056000396000f3fe6080604052600436106100dd5760003560e01c806399540b511161007f578063bc197c8111610059578063bc197c8114610297578063dd3385b7146102d4578063ec951a96146102ff578063f23a6e611461033c576100dd565b806399540b511461022257806399dd7e201461023e578063ae677aa31461027b576100dd565b80632a45b250116100bb5780632a45b250146101755780634224d18f146101b25780636aefd991146101ce5780636f6b9a72146101f7576100dd565b806301ffc9a7146100e25780630f08efe01461011f57806312e855851461014a575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190612451565b610379565b6040516101169190612951565b60405180910390f35b34801561012b57600080fd5b506101346103e8565b604051610141919061292f565b60405180910390f35b34801561015657600080fd5b5061015f610652565b60405161016c9190612ace565b60405180910390f35b34801561018157600080fd5b5061019c6004803603810190610197919061247a565b61065c565b6040516101a99190612ab3565b60405180910390f35b6101cc60048036038101906101c79190612399565b6107b3565b005b3480156101da57600080fd5b506101f560048036038101906101f091906124a3565b610c04565b005b34801561020357600080fd5b5061020c610e88565b604051610219919061292f565b60405180910390f35b61023c600480360381019061023791906124a3565b611211565b005b34801561024a57600080fd5b506102656004803603810190610260919061247a565b6115b0565b6040516102729190612ab3565b60405180910390f35b6102956004803603810190610290919061247a565b6117f1565b005b3480156102a357600080fd5b506102be60048036038101906102b9919061223b565b61188b565b6040516102cb919061296c565b60405180910390f35b3480156102e057600080fd5b506102e96118bc565b6040516102f6919061292f565b60405180910390f35b34801561030b57600080fd5b506103266004803603810190610321919061247a565b611c5b565b604051610333919061292f565b60405180910390f35b34801561034857600080fd5b50610363600480360381019061035e9190612307565b611f4e565b604051610370919061296c565b60405180910390f35b6000807fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614905080915050919050565b606060006103f66001611f7d565b90506000808267ffffffffffffffff81111561043b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561047457816020015b61046161206c565b8152602001906001900390816104595790505b50905060005b838110156106485760006001826104919190612c03565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050848681518110610619577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052506001856106319190612c03565b94505050808061064090612dbc565b91505061047a565b5080935050505090565b6000600454905090565b61066461206c565b600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815250509050919050565b600260005414156107f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f090612a73565b60405180910390fd5b60026000819055506108426040518060400160405280601581526020017f4372656174696e67204d61726b6574204974656d3a0000000000000000000000815250868686611f8b565b60008573ffffffffffffffffffffffffffffffffffffffff166301ffc9a77fd9b67a26000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040161089d919061296c565b60206040518083038186803b1580156108b557600080fd5b505afa1580156108c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ed9190612428565b9050600115158115151461090057600080fd5b60008411610943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093a90612a93565b60405180910390fd5b6004543414610987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097e90612a33565b60405180910390fd5b610991600161202d565b600061099d6001611f7d565b90506040518060e001604052808281526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815250600560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c082015181600601559050508673ffffffffffffffffffffffffffffffffffffffff1663f242432a33308988886040518663ffffffff1660e01b8152600401610b699594939291906128d5565b600060405180830381600087803b158015610b8357600080fd5b505af1158015610b97573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff16817fc3ff4a764c9b9e1277108ea23607246687fc68d2d8d7ad5ef37a8702d4443759883360008a8a604051610beb959493929190612ae9565b60405180910390a3505060016000819055505050505050565b60006005600085815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca4906129d3565b60405180910390fd5b8260056000868152602001908152602001600020600601541015610d06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfd906129f3565b60405180910390fd5b60006005600086815260200190815260200160002060020154905060006005600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663f242432a30600560008a815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168589896040518663ffffffff1660e01b8152600401610dd395949392919061287b565b600060405180830381600087803b158015610ded57600080fd5b505af1158015610e01573d6000803e3d6000fd5b5050505084600560008881526020019081526020016000206006016000828254610e2b9190612c59565b92505081905550857fb2f34009f071c98d3d38bfcdfb3ef51685af4db79379cf422549881c14e21ae86005600089815260200190815260200160002060060154604051610e789190612ace565b60405180910390a2505050505050565b60606000610e966001611f7d565b905060008060005b83811015610f3f573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610ece9190612c03565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f2c57600183610f299190612c03565b92505b8080610f3790612dbc565b915050610e9e565b5060008267ffffffffffffffff811115610f82577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610fbb57816020015b610fa861206c565b815260200190600190039081610fa05790505b50905060005b84811015611206573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610ff19190612c03565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156111f357600060018261104e9190612c03565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815250508486815181106111d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052506001856111ee9190612c03565b945050505b80806111fe90612dbc565b915050610fc1565b508094505050505090565b60026000541415611257576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124e90612a73565b60405180910390fd5b600260008190555060006005600085815260200190815260200160002060050154905060006005600086815260200190815260200160002060020154905083600560008781526020019081526020016000206006015410156112ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e5906129f3565b60405180910390fd5b813414611330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132790612a13565b60405180910390fd5b6005600086815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156113ac573d6000803e3d6000fd5b5060006005600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663f242432a30338589896040518663ffffffff1660e01b81526004016114299594939291906128d5565b600060405180830381600087803b15801561144357600080fd5b505af1158015611457573d6000803e3d6000fd5b50505050336005600088815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846005600088815260200190815260200160002060060160008282546114d69190612c59565b925050819055506114e7600261202d565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015611551573d6000803e3d6000fd5b50857fb2f34009f071c98d3d38bfcdfb3ef51685af4db79379cf422549881c14e21ae860056000898152602001908152602001600020600601546040516115989190612ace565b60405180910390a25050506001600081905550505050565b6115b861206c565b60006115c46001611f7d565b905060008060005b838110156116215785600560006001846115e69190612c03565b815260200190815260200160002060020154141561160e5760018361160b9190612c03565b92505b808061161990612dbc565b9150506115cc565b5061162a61206c565b60005b848110156117e45786600560006001846116479190612c03565b81526020019081526020016000206002015414156117d157600060018261166e9190612c03565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820154815260200160068201548152505093506001856117cc9190612c03565b945050505b80806117dc90612dbc565b91505061162d565b5080945050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611881576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187890612a53565b60405180910390fd5b8060048190555050565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97905098975050505050505050565b606060006118ca6001611f7d565b905060008060005b82811015611973573373ffffffffffffffffffffffffffffffffffffffff16600560006001846119029190612c03565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156119605760018361195d9190612c03565b92505b808061196b90612dbc565b9150506118d2565b5060008267ffffffffffffffff8111156119b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156119ef57816020015b6119dc61206c565b8152602001906001900390816119d45790505b50905060005b84811015611c50573373ffffffffffffffffffffffffffffffffffffffff1660056000600184611a259190612c03565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611c3d57600060056000600184611a869190612c03565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050848681518110611c20577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185611c389190612c03565b945050505b8080611c4890612dbc565b9150506119f5565b508094505050505090565b60606000611c696001611f7d565b905060008060005b83811015611cc6578560056000600184611c8b9190612c03565b8152602001908152602001600020600201541415611cb357600183611cb09190612c03565b92505b8080611cbe90612dbc565b915050611c71565b5060008267ffffffffffffffff811115611d09577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015611d4257816020015b611d2f61206c565b815260200190600190039081611d275790505b50905060005b84811015611f41578660056000600184611d629190612c03565b8152602001908152602001600020600201541415611f2e576000600182611d899190612c03565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050848681518110611f11577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185611f299190612c03565b945050505b8080611f3990612dbc565b915050611d48565b5080945050505050919050565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf9790509695505050505050565b600081600001549050919050565b61202784848484604051602401611fa59493929190612987565b6040516020818303038152906040527fdaa394bd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612043565b50505050565b6001816000016000828254019250508190555050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b60006120fe6120f984612b61565b612b3c565b90508281526020810184848401111561211657600080fd5b612121848285612d49565b509392505050565b6000813590506121388161302b565b92915050565b60008083601f84011261215057600080fd5b8235905067ffffffffffffffff81111561216957600080fd5b60208301915083602082028301111561218157600080fd5b9250929050565b60008151905061219781613042565b92915050565b6000813590506121ac81613059565b92915050565b60008083601f8401126121c457600080fd5b8235905067ffffffffffffffff8111156121dd57600080fd5b6020830191508360018202830111156121f557600080fd5b9250929050565b600082601f83011261220d57600080fd5b813561221d8482602086016120eb565b91505092915050565b60008135905061223581613070565b92915050565b60008060008060008060008060a0898b03121561225757600080fd5b60006122658b828c01612129565b98505060206122768b828c01612129565b975050604089013567ffffffffffffffff81111561229357600080fd5b61229f8b828c0161213e565b9650965050606089013567ffffffffffffffff8111156122be57600080fd5b6122ca8b828c0161213e565b9450945050608089013567ffffffffffffffff8111156122e957600080fd5b6122f58b828c016121b2565b92509250509295985092959890939650565b60008060008060008060a0878903121561232057600080fd5b600061232e89828a01612129565b965050602061233f89828a01612129565b955050604061235089828a01612226565b945050606061236189828a01612226565b935050608087013567ffffffffffffffff81111561237e57600080fd5b61238a89828a016121b2565b92509250509295509295509295565b600080600080600060a086880312156123b157600080fd5b60006123bf88828901612129565b95505060206123d088828901612226565b94505060406123e188828901612226565b93505060606123f288828901612226565b925050608086013567ffffffffffffffff81111561240f57600080fd5b61241b888289016121fc565b9150509295509295909350565b60006020828403121561243a57600080fd5b600061244884828501612188565b91505092915050565b60006020828403121561246357600080fd5b60006124718482850161219d565b91505092915050565b60006020828403121561248c57600080fd5b600061249a84828501612226565b91505092915050565b6000806000606084860312156124b857600080fd5b60006124c686828701612226565b93505060206124d786828701612226565b925050604084013567ffffffffffffffff8111156124f457600080fd5b612500868287016121fc565b9150509250925092565b60006125168383612741565b60e08301905092915050565b61252b81612d13565b82525050565b61253a81612c9f565b82525050565b61254981612c8d565b82525050565b61255881612c8d565b82525050565b600061256982612ba2565b6125738185612bd0565b935061257e83612b92565b8060005b838110156125af578151612596888261250a565b97506125a183612bc3565b925050600181019050612582565b5085935050505092915050565b6125c581612cb1565b82525050565b6125d481612cbd565b82525050565b60006125e582612bad565b6125ef8185612be1565b93506125ff818560208601612d58565b61260881612e63565b840191505092915050565b600061261e82612bb8565b6126288185612bf2565b9350612638818560208601612d58565b61264181612e63565b840191505092915050565b6000612659602d83612bf2565b915061266482612e74565b604082019050919050565b600061267c601a83612bf2565b915061268782612ec3565b602082019050919050565b600061269f604083612bf2565b91506126aa82612eec565b604082019050919050565b60006126c2602483612bf2565b91506126cd82612f3b565b604082019050919050565b60006126e5602b83612bf2565b91506126f082612f8a565b604082019050919050565b6000612708601f83612bf2565b915061271382612fd9565b602082019050919050565b600061272b601c83612bf2565b915061273682613002565b602082019050919050565b60e082016000820151612757600085018261285d565b50602082015161276a6020850182612540565b50604082015161277d604085018261285d565b5060608201516127906060850182612531565b5060808201516127a36080850182612531565b5060a08201516127b660a085018261285d565b5060c08201516127c960c085018261285d565b50505050565b60e0820160008201516127e5600085018261285d565b5060208201516127f86020850182612540565b50604082015161280b604085018261285d565b50606082015161281e6060850182612531565b5060808201516128316080850182612531565b5060a082015161284460a085018261285d565b5060c082015161285760c085018261285d565b50505050565b61286681612d09565b82525050565b61287581612d09565b82525050565b600060a082019050612890600083018861254f565b61289d6020830187612522565b6128aa604083018661286c565b6128b7606083018561286c565b81810360808301526128c981846125da565b90509695505050505050565b600060a0820190506128ea600083018861254f565b6128f7602083018761254f565b612904604083018661286c565b612911606083018561286c565b818103608083015261292381846125da565b90509695505050505050565b60006020820190508181036000830152612949818461255e565b905092915050565b600060208201905061296660008301846125bc565b92915050565b600060208201905061298160008301846125cb565b92915050565b600060808201905081810360008301526129a18187612613565b90506129b0602083018661254f565b6129bd604083018561286c565b6129ca606083018461286c565b95945050505050565b600060208201905081810360008301526129ec8161264c565b9050919050565b60006020820190508181036000830152612a0c8161266f565b9050919050565b60006020820190508181036000830152612a2c81612692565b9050919050565b60006020820190508181036000830152612a4c816126b5565b9050919050565b60006020820190508181036000830152612a6c816126d8565b9050919050565b60006020820190508181036000830152612a8c816126fb565b9050919050565b60006020820190508181036000830152612aac8161271e565b9050919050565b600060e082019050612ac860008301846127cf565b92915050565b6000602082019050612ae3600083018461286c565b92915050565b600060a082019050612afe600083018861286c565b612b0b602083018761254f565b612b18604083018661254f565b612b25606083018561286c565b612b32608083018461286c565b9695505050505050565b6000612b46612b57565b9050612b528282612d8b565b919050565b6000604051905090565b600067ffffffffffffffff821115612b7c57612b7b612e34565b5b612b8582612e63565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612c0e82612d09565b9150612c1983612d09565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612c4e57612c4d612e05565b5b828201905092915050565b6000612c6482612d09565b9150612c6f83612d09565b925082821015612c8257612c81612e05565b5b828203905092915050565b6000612c9882612ce9565b9050919050565b6000612caa82612ce9565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612d1e82612d25565b9050919050565b6000612d3082612d37565b9050919050565b6000612d4282612ce9565b9050919050565b82818337600083830152505050565b60005b83811015612d76578082015181840152602081019050612d5b565b83811115612d85576000848401525b50505050565b612d9482612e63565b810181811067ffffffffffffffff82111715612db357612db2612e34565b5b80604052505050565b6000612dc782612d09565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612dfa57612df9612e05565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f6e6c79206974656d2073656c6c65722063616e2063616e63656c2061206d6160008201527f726b6574206c697374696e672e00000000000000000000000000000000000000602082015250565b7f54686973206974656d206973206e6f7420617661696c61626c65000000000000600082015250565b7f506c65617365207375626d6974207468652061736b696e67207072696365206960008201527f6e206f7264657220746f20636f6d706c65746520746865207075726368617365602082015250565b7f5072696365206d75737420626520657175616c20746f206c697374696e67207060008201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206d61726b6574206f776e65722063616e20757064617465206c697360008201527f74696e672070726963652e000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f5072696365206d757374206265206174206c6561737420312077656900000000600082015250565b61303481612c8d565b811461303f57600080fd5b50565b61304b81612cb1565b811461305657600080fd5b50565b61306281612cbd565b811461306d57600080fd5b50565b61307981612d09565b811461308457600080fd5b5056fea264697066735822122000dda10f66ddef66d8da441f3cf9f5ae90e6aad9eae04604d2329bf6d7f4747964736f6c63430008040033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _listingPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Market> {
    return super.deploy(_listingPrice, overrides || {}) as Promise<Market>;
  }
  override getDeployTransaction(
    _listingPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_listingPrice, overrides || {});
  }
  override attach(address: string): Market {
    return super.attach(address) as Market;
  }
  override connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new utils.Interface(_abi) as MarketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}
