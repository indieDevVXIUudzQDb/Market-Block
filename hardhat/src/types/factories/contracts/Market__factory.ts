/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Market, MarketInterface } from "../../contracts/Market";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingAmount",
        type: "uint256",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingAmount",
        type: "uint256",
      },
    ],
    name: "MarketItemStatusChange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "cancelMarketItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "createMarketSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "fetchMarketItem",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "fetchMarketItemByTokenId",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItemsCreated",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "fetchMarketItemsForToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingPrice",
        type: "uint256",
      },
    ],
    name: "updateListingPrice",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620032b8380380620032b88339818101604052810190620000379190620000a5565b600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060048190555050620000f5565b6000815190506200009f81620000db565b92915050565b600060208284031215620000b857600080fd5b6000620000c8848285016200008e565b91505092915050565b6000819050919050565b620000e681620000d1565b8114620000f257600080fd5b50565b6131b380620001056000396000f3fe6080604052600436106100dd5760003560e01c806399540b511161007f578063bc197c8111610059578063bc197c8114610297578063dd3385b7146102d4578063ec951a96146102ff578063f23a6e611461033c576100dd565b806399540b511461022257806399dd7e201461023e578063ae677aa31461027b576100dd565b80632a45b250116100bb5780632a45b250146101755780634224d18f146101b25780636aefd991146101ce5780636f6b9a72146101f7576100dd565b806301ffc9a7146100e25780630f08efe01461011f57806312e855851461014a575b600080fd5b3480156100ee57600080fd5b50610109600480360381019061010491906124c3565b610379565b6040516101169190612a47565b60405180910390f35b34801561012b57600080fd5b506101346103e8565b6040516101419190612a25565b60405180910390f35b34801561015657600080fd5b5061015f610652565b60405161016c9190612bc4565b60405180910390f35b34801561018157600080fd5b5061019c600480360381019061019791906124ec565b61065c565b6040516101a99190612ba9565b60405180910390f35b6101cc60048036038101906101c7919061240b565b6107b3565b005b3480156101da57600080fd5b506101f560048036038101906101f09190612515565b610c06565b005b34801561020357600080fd5b5061020c610ec2565b6040516102199190612a25565b60405180910390f35b61023c60048036038101906102379190612515565b61124b565b005b34801561024a57600080fd5b50610265600480360381019061026091906124ec565b611622565b6040516102729190612ba9565b60405180910390f35b610295600480360381019061029091906124ec565b611863565b005b3480156102a357600080fd5b506102be60048036038101906102b991906122ad565b6118fd565b6040516102cb9190612a62565b60405180910390f35b3480156102e057600080fd5b506102e961192e565b6040516102f69190612a25565b60405180910390f35b34801561030b57600080fd5b50610326600480360381019061032191906124ec565b611ccd565b6040516103339190612a25565b60405180910390f35b34801561034857600080fd5b50610363600480360381019061035e9190612379565b611fc0565b6040516103709190612a62565b60405180910390f35b6000807fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614905080915050919050565b606060006103f66001611fef565b90506000808267ffffffffffffffff81111561043b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561047457816020015b6104616120de565b8152602001906001900390816104595790505b50905060005b838110156106485760006001826104919190612cf9565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050848681518110610619577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052506001856106319190612cf9565b94505050808061064090612eb2565b91505061047a565b5080935050505090565b6000600454905090565b6106646120de565b600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815250509050919050565b600260005414156107f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f090612b69565b60405180910390fd5b60026000819055506108426040518060400160405280601581526020017f4372656174696e67204d61726b6574204974656d3a0000000000000000000000815250868686611ffd565b60008573ffffffffffffffffffffffffffffffffffffffff166301ffc9a77fd9b67a26000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040161089d9190612a62565b60206040518083038186803b1580156108b557600080fd5b505afa1580156108c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ed919061249a565b9050600115158115151461090057600080fd5b60008411610943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093a90612b89565b60405180910390fd5b6004543414610987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097e90612b29565b60405180910390fd5b610991600161209f565b600061099d6001611fef565b90506040518060e001604052808281526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815250600560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c082015181600601559050508673ffffffffffffffffffffffffffffffffffffffff1663eb46c45b3333308a89896040518763ffffffff1660e01b8152600401610b6b969594939291906129bd565b600060405180830381600087803b158015610b8557600080fd5b505af1158015610b99573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff16817fc3ff4a764c9b9e1277108ea23607246687fc68d2d8d7ad5ef37a8702d4443759883360008a8a604051610bed959493929190612bdf565b60405180910390a3505060016000819055505050505050565b60006005600085815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610caf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca690612ac9565b60405180910390fd5b8260056000868152602001908152602001600020600601541015610d08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cff90612ae9565b60405180910390fd5b60006005600086815260200190815260200160002060020154905060006005600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663eb46c45b6005600089815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630600560008b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868a8a6040518763ffffffff1660e01b8152600401610e0d969594939291906128ed565b600060405180830381600087803b158015610e2757600080fd5b505af1158015610e3b573d6000803e3d6000fd5b5050505084600560008881526020019081526020016000206006016000828254610e659190612d4f565b92505081905550857fb2f34009f071c98d3d38bfcdfb3ef51685af4db79379cf422549881c14e21ae86005600089815260200190815260200160002060060154604051610eb29190612bc4565b60405180910390a2505050505050565b60606000610ed06001611fef565b905060008060005b83811015610f79573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610f089190612cf9565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f6657600183610f639190612cf9565b92505b8080610f7190612eb2565b915050610ed8565b5060008267ffffffffffffffff811115610fbc577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610ff557816020015b610fe26120de565b815260200190600190039081610fda5790505b50905060005b84811015611240573373ffffffffffffffffffffffffffffffffffffffff166005600060018461102b9190612cf9565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561122d5760006001826110889190612cf9565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050848681518110611210577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052506001856112289190612cf9565b945050505b808061123890612eb2565b915050610ffb565b508094505050505090565b60026000541415611291576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128890612b69565b60405180910390fd5b60026000819055506000600560008581526020019081526020016000206005015490506000600560008681526020019081526020016000206002015490508360056000878152602001908152602001600020600601541015611328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131f90612ae9565b60405180910390fd5b81341461136a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136190612b09565b60405180910390fd5b6005600086815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156113e6573d6000803e3d6000fd5b5060006005600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663eb46c45b6005600089815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163033868a8a6040518763ffffffff1660e01b815260040161149b96959493929190612955565b600060405180830381600087803b1580156114b557600080fd5b505af11580156114c9573d6000803e3d6000fd5b50505050336005600088815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846005600088815260200190815260200160002060060160008282546115489190612d4f565b92505081905550611559600261209f565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f193505050501580156115c3573d6000803e3d6000fd5b50857fb2f34009f071c98d3d38bfcdfb3ef51685af4db79379cf422549881c14e21ae8600560008981526020019081526020016000206006015460405161160a9190612bc4565b60405180910390a25050506001600081905550505050565b61162a6120de565b60006116366001611fef565b905060008060005b838110156116935785600560006001846116589190612cf9565b81526020019081526020016000206002015414156116805760018361167d9190612cf9565b92505b808061168b90612eb2565b91505061163e565b5061169c6120de565b60005b848110156118565786600560006001846116b99190612cf9565b81526020019081526020016000206002015414156118435760006001826116e09190612cf9565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050935060018561183e9190612cf9565b945050505b808061184e90612eb2565b91505061169f565b5080945050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146118f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118ea90612b49565b60405180910390fd5b8060048190555050565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97905098975050505050505050565b6060600061193c6001611fef565b905060008060005b828110156119e5573373ffffffffffffffffffffffffffffffffffffffff16600560006001846119749190612cf9565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156119d2576001836119cf9190612cf9565b92505b80806119dd90612eb2565b915050611944565b5060008267ffffffffffffffff811115611a28577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015611a6157816020015b611a4e6120de565b815260200190600190039081611a465790505b50905060005b84811015611cc2573373ffffffffffffffffffffffffffffffffffffffff1660056000600184611a979190612cf9565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611caf57600060056000600184611af89190612cf9565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050848681518110611c92577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185611caa9190612cf9565b945050505b8080611cba90612eb2565b915050611a67565b508094505050505090565b60606000611cdb6001611fef565b905060008060005b83811015611d38578560056000600184611cfd9190612cf9565b8152602001908152602001600020600201541415611d2557600183611d229190612cf9565b92505b8080611d3090612eb2565b915050611ce3565b5060008267ffffffffffffffff811115611d7b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015611db457816020015b611da16120de565b815260200190600190039081611d995790505b50905060005b84811015611fb3578660056000600184611dd49190612cf9565b8152602001908152602001600020600201541415611fa0576000600182611dfb9190612cf9565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050848681518110611f83577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185611f9b9190612cf9565b945050505b8080611fab90612eb2565b915050611dba565b5080945050505050919050565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf9790509695505050505050565b600081600001549050919050565b612099848484846040516024016120179493929190612a7d565b6040516020818303038152906040527fdaa394bd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120b5565b50505050565b6001816000016000828254019250508190555050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b600061217061216b84612c57565b612c32565b90508281526020810184848401111561218857600080fd5b612193848285612e3f565b509392505050565b6000813590506121aa81613121565b92915050565b60008083601f8401126121c257600080fd5b8235905067ffffffffffffffff8111156121db57600080fd5b6020830191508360208202830111156121f357600080fd5b9250929050565b60008151905061220981613138565b92915050565b60008135905061221e8161314f565b92915050565b60008083601f84011261223657600080fd5b8235905067ffffffffffffffff81111561224f57600080fd5b60208301915083600182028301111561226757600080fd5b9250929050565b600082601f83011261227f57600080fd5b813561228f84826020860161215d565b91505092915050565b6000813590506122a781613166565b92915050565b60008060008060008060008060a0898b0312156122c957600080fd5b60006122d78b828c0161219b565b98505060206122e88b828c0161219b565b975050604089013567ffffffffffffffff81111561230557600080fd5b6123118b828c016121b0565b9650965050606089013567ffffffffffffffff81111561233057600080fd5b61233c8b828c016121b0565b9450945050608089013567ffffffffffffffff81111561235b57600080fd5b6123678b828c01612224565b92509250509295985092959890939650565b60008060008060008060a0878903121561239257600080fd5b60006123a089828a0161219b565b96505060206123b189828a0161219b565b95505060406123c289828a01612298565b94505060606123d389828a01612298565b935050608087013567ffffffffffffffff8111156123f057600080fd5b6123fc89828a01612224565b92509250509295509295509295565b600080600080600060a0868803121561242357600080fd5b60006124318882890161219b565b955050602061244288828901612298565b945050604061245388828901612298565b935050606061246488828901612298565b925050608086013567ffffffffffffffff81111561248157600080fd5b61248d8882890161226e565b9150509295509295909350565b6000602082840312156124ac57600080fd5b60006124ba848285016121fa565b91505092915050565b6000602082840312156124d557600080fd5b60006124e38482850161220f565b91505092915050565b6000602082840312156124fe57600080fd5b600061250c84828501612298565b91505092915050565b60008060006060848603121561252a57600080fd5b600061253886828701612298565b935050602061254986828701612298565b925050604084013567ffffffffffffffff81111561256657600080fd5b6125728682870161226e565b9150509250925092565b600061258883836127b3565b60e08301905092915050565b61259d81612e09565b82525050565b6125ac81612d95565b82525050565b6125bb81612d83565b82525050565b6125ca81612d83565b82525050565b60006125db82612c98565b6125e58185612cc6565b93506125f083612c88565b8060005b83811015612621578151612608888261257c565b975061261383612cb9565b9250506001810190506125f4565b5085935050505092915050565b61263781612da7565b82525050565b61264681612db3565b82525050565b600061265782612ca3565b6126618185612cd7565b9350612671818560208601612e4e565b61267a81612f59565b840191505092915050565b600061269082612cae565b61269a8185612ce8565b93506126aa818560208601612e4e565b6126b381612f59565b840191505092915050565b60006126cb602d83612ce8565b91506126d682612f6a565b604082019050919050565b60006126ee601a83612ce8565b91506126f982612fb9565b602082019050919050565b6000612711604083612ce8565b915061271c82612fe2565b604082019050919050565b6000612734602483612ce8565b915061273f82613031565b604082019050919050565b6000612757602b83612ce8565b915061276282613080565b604082019050919050565b600061277a601f83612ce8565b9150612785826130cf565b602082019050919050565b600061279d601c83612ce8565b91506127a8826130f8565b602082019050919050565b60e0820160008201516127c960008501826128cf565b5060208201516127dc60208501826125b2565b5060408201516127ef60408501826128cf565b50606082015161280260608501826125a3565b50608082015161281560808501826125a3565b5060a082015161282860a08501826128cf565b5060c082015161283b60c08501826128cf565b50505050565b60e08201600082015161285760008501826128cf565b50602082015161286a60208501826125b2565b50604082015161287d60408501826128cf565b50606082015161289060608501826125a3565b5060808201516128a360808501826125a3565b5060a08201516128b660a08501826128cf565b5060c08201516128c960c08501826128cf565b50505050565b6128d881612dff565b82525050565b6128e781612dff565b82525050565b600060c0820190506129026000830189612594565b61290f60208301886125c1565b61291c6040830187612594565b61292960608301866128de565b61293660808301856128de565b81810360a0830152612948818461264c565b9050979650505050505050565b600060c08201905061296a6000830189612594565b61297760208301886125c1565b61298460408301876125c1565b61299160608301866128de565b61299e60808301856128de565b81810360a08301526129b0818461264c565b9050979650505050505050565b600060c0820190506129d260008301896125c1565b6129df60208301886125c1565b6129ec60408301876125c1565b6129f960608301866128de565b612a0660808301856128de565b81810360a0830152612a18818461264c565b9050979650505050505050565b60006020820190508181036000830152612a3f81846125d0565b905092915050565b6000602082019050612a5c600083018461262e565b92915050565b6000602082019050612a77600083018461263d565b92915050565b60006080820190508181036000830152612a978187612685565b9050612aa660208301866125c1565b612ab360408301856128de565b612ac060608301846128de565b95945050505050565b60006020820190508181036000830152612ae2816126be565b9050919050565b60006020820190508181036000830152612b02816126e1565b9050919050565b60006020820190508181036000830152612b2281612704565b9050919050565b60006020820190508181036000830152612b4281612727565b9050919050565b60006020820190508181036000830152612b628161274a565b9050919050565b60006020820190508181036000830152612b828161276d565b9050919050565b60006020820190508181036000830152612ba281612790565b9050919050565b600060e082019050612bbe6000830184612841565b92915050565b6000602082019050612bd960008301846128de565b92915050565b600060a082019050612bf460008301886128de565b612c0160208301876125c1565b612c0e60408301866125c1565b612c1b60608301856128de565b612c2860808301846128de565b9695505050505050565b6000612c3c612c4d565b9050612c488282612e81565b919050565b6000604051905090565b600067ffffffffffffffff821115612c7257612c71612f2a565b5b612c7b82612f59565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612d0482612dff565b9150612d0f83612dff565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612d4457612d43612efb565b5b828201905092915050565b6000612d5a82612dff565b9150612d6583612dff565b925082821015612d7857612d77612efb565b5b828203905092915050565b6000612d8e82612ddf565b9050919050565b6000612da082612ddf565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612e1482612e1b565b9050919050565b6000612e2682612e2d565b9050919050565b6000612e3882612ddf565b9050919050565b82818337600083830152505050565b60005b83811015612e6c578082015181840152602081019050612e51565b83811115612e7b576000848401525b50505050565b612e8a82612f59565b810181811067ffffffffffffffff82111715612ea957612ea8612f2a565b5b80604052505050565b6000612ebd82612dff565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612ef057612eef612efb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f6e6c79206974656d2073656c6c65722063616e2063616e63656c2061206d6160008201527f726b6574206c697374696e672e00000000000000000000000000000000000000602082015250565b7f54686973206974656d206973206e6f7420617661696c61626c65000000000000600082015250565b7f506c65617365207375626d6974207468652061736b696e67207072696365206960008201527f6e206f7264657220746f20636f6d706c65746520746865207075726368617365602082015250565b7f5072696365206d75737420626520657175616c20746f206c697374696e67207060008201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206d61726b6574206f776e65722063616e20757064617465206c697360008201527f74696e672070726963652e000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f5072696365206d757374206265206174206c6561737420312077656900000000600082015250565b61312a81612d83565b811461313557600080fd5b50565b61314181612da7565b811461314c57600080fd5b50565b61315881612db3565b811461316357600080fd5b50565b61316f81612dff565b811461317a57600080fd5b5056fea2646970667358221220bcc7db7deec150bc217c441bb4b02a8a8c64a5b57d677bf01d26bfdd41aab61f64736f6c63430008040033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _listingPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Market> {
    return super.deploy(_listingPrice, overrides || {}) as Promise<Market>;
  }
  override getDeployTransaction(
    _listingPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_listingPrice, overrides || {});
  }
  override attach(address: string): Market {
    return super.attach(address) as Market;
  }
  override connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new utils.Interface(_abi) as MarketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}
